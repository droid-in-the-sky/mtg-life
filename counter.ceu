/*{-{*/

class Counter with
    event void    go;
    event int     counter;
    var   UIGrid* grid;
do
    this.counter = 0;

    var LuaGrid lg;
        _lua_getglobal(global:lua, "grid_counter");    // [ t ]
        lg.ref = _luaL_ref(global:lua, _LUA_REGISTRYINDEX);
        emit lg.go;                             // [ ]
    grid = &lg.grid;

    await/0 go;

    event int hist_new;
    var   int hist_cur;

    var _SDL_Color clr_fg;
        clr_fg.r = 0;
        clr_fg.g = 0;
        clr_fg.b = 0;

    par do
        loop do
            var int it = await lg.grid.ok_uiclicked;
            if it == 1 then         // INC
                emit global:go_sound = global:snd_click;
                emit this.counter = counter+1;
            else/if it == 3 then    // DEC
                emit global:go_sound = global:snd_click;
                emit this.counter = counter-1;
            else/if it == 4 then
                emit global:go_sound = global:snd_click;
                emit counter = hist_cur;
            end
        end
    with
        hist_new = counter;
        loop do
            if counter < 0 then
                counter = 0;
            end

            var UITexture* d = new UITexture;

            var _char[5] str;
            _sprintf(str, "%d", counter);

            var _SDL_Surface* sfc :=
                    _TTF_RenderText_Blended(global:fnt_cnt, str, clr_fg);
            d:tex := _SDL_CreateTextureFromSurface(global:ren, sfc);
            d:tex_own? = 1;
            emit d:go;
            _SDL_FreeSurface(sfc);

            lg.grid.ui_ptr ::= d;
            free lg.grid.uis[1];
            emit lg.grid.go_ui = 1;

            emit hist_new;
            hist_new = counter;
            await counter;
        end
    with
        loop do
            await hist_new;
            hist_cur = hist_new;

            var UITexture* d = new UITexture;
                d:align_x = _UI_ALIGN_RIGHT;
                d:align_y = _UI_ALIGN_BOTTOM;

            var _char[5] str;
            _sprintf(str, "%d", hist_cur);

            var _SDL_Surface* sfc :=
                    _TTF_RenderText_Blended(global:fnt_his, str, clr_fg);
            d:tex := _SDL_CreateTextureFromSurface(global:ren, sfc);
            d:tex_own? = 1;
            emit d:go;
            _SDL_FreeSurface(sfc);

            lg.grid.ui_ptr ::= d;
            free lg.grid.uis[3];
            emit lg.grid.go_ui = 3;

            loop do
                par/or do
                    await hist_new;
                with
                    await 3s;
                    break;
                end
            end
        end
    end
end

/*}-}*/ dnl
